version: '3.8'

services:
  # Backend API Service
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - AWS_REGION=us-east-1
      - DYNAMODB_TABLE=genai-governance-audit-logs-dev
      - S3_BUCKET=genai-governance-audit-logs-dev
      - JWT_SECRET=your-secret-key-here
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRATION=3600
    volumes:
      - ./backend:/app/backend
      - ./logs:/app/logs
    networks:
      - genai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./frontend:/app/frontend
    depends_on:
      - backend
    networks:
      - genai-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - genai-network

  # PostgreSQL for local development (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=genai_governance
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - genai-network

volumes:
  redis_data:
  postgres_data:

networks:
  genai-network:
    driver: bridge 